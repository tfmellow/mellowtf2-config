// from dedstar's cfg

// These commands improve fps and make the game more stable for systems with CPU with 4 cores or more

//mem_max_heapsize_dedicated 128
//mem_max_heapsize 512
datacachesize 512 // Increase data cache size only on systems with 8GB of RAM or more
filesystem_buffer_size 32768 // 32KB for better block size optimization
filesystem_max_stdio_read 64 // Use a higher max read cap (64MB)
filesystem_native 1 // Use native filesystem calls if available
filesystem_unbuffered_io 1 // Allow for unbuffered IO where appropriate since it can be async
lzma_persistent_buffer 1 // Keep the LZMA compression system in memory to prevent reloads of it
cl_ejectbrass 0 // Disable bullet ejection on shots, does not cause crash anymore when on heavy
cl_always_flush_models 0 // Keep models loaded in between map loads and keep preloading
sv_forcepreload 0
sv_alternateticks 0 // Run every tick (offline or local server)
sv_turbophysics 1 // Disable physics interactions (offline or local server)
sv_parallel_sendsnapshot 1 // Send snapshots to clients in parallel (offline or local server)
mat_levelflush 1 // Clear temporary memory to prevent overloading memory stores
mat_bufferprimitives 1 // Buffer primitives
mat_clipz 1 // Clips what is drawn for a performance improvement
mat_use_compressed_hdr_textures 1 // Use compressed HDR textures
mat_compressedtextures 1 // Allow for compressed textures
mat_managedtextures 1 // Use Direct3D to manage textures, uses a bit more system memory
mat_mipmaptextures 1 // Mipmap textures to optimize texture filtering
mat_disable_ps_patch 0 // Enable patching if necessary when MSAA is enabled
mat_max_worldmesh_vertices 65536 // Use maximum mesh vertices
mat_tonemapping_occlusion_use_stencil 0 // Do not use stencil buffer for occlusion queries
mat_postprocess_x 1
mat_postprocess_y 1
// mat_forcehardwaresync 1	// 0 causes massive input lag when non queued
mat_forcehardwaresync 0 // Skip hardware sync which is not proper on queued material system (testing)
mat_requires_rt_alloc_first 0 // Force disable, since new GPUs do not need to do this. Improves load times.
mat_parallaxmap 0 // Disable possible dead parallax mapping shader path
r_particle_sim_spike_threshold_ms 0 // Early finish to unused particle performance stats
r_fastzreject 1
r_norefresh 1 // Do not store a useless and unused frame time variable
r_entityclips 1 // Clip entities preferably using clip planes
r_hunkalloclightmaps 0 // Uncap lightmaps for larger maps, FPS impact is non-existent
r_frustumcullworld 1 // Cull on world draw
r_worldlistcache 1 // Cache some world rendering
r_lightcache_zbuffercache 1 // Load z cache data with the map
r_drawopaquestaticpropslast 0 // Use the newer rendering mode if possible
snd_async_fullyasync 1 // Do not use sound cache
snd_async_minsize 0 // Fast path for streaming sound
snd_noextraupdate 1
snd_async_spew_blocking 0
building_cubemaps 0 // Disable various post processing effects
disp_dynamic 0 // Do not use dynamic meshes for world geometry (displacements)
net_maxfilesize 64	// Max downloadable file size
mat_powersavingsmode 0 // Ensure power savings mode is disabled
engine_no_focus_sleep 0 // Do not limit FPS when the engine is not focused because
						// the focus detection can be buggy on some systems or while
						// streaming and may limit your FPS, without you knowing
host_flush_threshold 0 	// Early finish to a Xbox 360 only flush task
fast_fogvolume 1
mod_offline_hdr_switch 1 // Skip outdated Source engine pathways
net_graphsolid 0 // Draw height ticks as single ticks
mat_forcemanagedtextureintohardware 0 // Do not do tricks to render textures into hardware
sys_minidumpspewlines 0 // Do not save any console output to a memory buffer in case of a crash
mat_texture_reload_frame_swap_workaround 0	// Workaround certain GL drivers holding unnecessary amounts of data when loading many materials by forcing synthetic frame swaps
ai_frametime_limit 0.015 // Use simpler NPC AI if the frametime is too low, useful for Source singleplayer and mods
con_drawnotify 0	// Disables drawing of notification area (for taking screenshots).
r_occlusion 1	// Enable occlusion culling which doesnt render things hidden behind other objects
r_occludeemaxarea 7.5 // Skip occlusion of objects that are too large to test for
r_occluderminarea 15 // Skip occluders that are too small to block anything worth our time
r_occludermincount 1 // Just in case we filter one out
bugreporter_uploadasync 1 // Upload bug reporter attachments asynchronously
cl_setupallbones 0
// demo_legacy_rollback 1 // Rollback player view based on interp
// demo_interpolateview 1 // Smooth out demo ticks
// replay_rendersetting_motionblur_can_toggle 1
// replay_cache_client_ragdolls 1
// replay_voice_during_playback 1
// replay_screenshotresolution 1

mod_load_anims_async 1
mod_load_mesh_async 1
mod_load_vcollide_async 1
mod_lock_mdls_on_load 0	// Do not lock models due to some issues with them being locked
mod_forcetouchdata 0 // Do not load submodels
mod_touchalldata 0 // Do not put submodels into cache
mod_forcedata 0 // Do not cache submodel data

host_thread_mode 2 // force multicore threading behavior
studio_queue_mode 1
mat_queue_mode 2 // force material multicore queue processing
//cl_threaded_bone_setup 1		// doesn't exist
cl_threaded_client_leaf_system 1
r_queued_decals 0 // disabled due to crashes
r_queued_ropes 1
r_queued_post_processing 0 // disabled because it usually fails to render the post processing
						   //  effects in time for the frame render, resulting in a missing texture
r_threaded_client_shadow_manager 1
r_threaded_particles 1
r_threaded_renderables 0 // 1 causes crashes and rendering desync (invisible players)

echo ""
echo "optimizations.cfg loaded"
echo ""